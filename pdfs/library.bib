@inproceedings{Zhang2009,
   author = {Mingui Zhang and Bin Liu and Beichuan Zhang},
   doi = {10.1109/GLOCOM.2009.5426135},
   isbn = {978-1-4244-4148-8},
   journal = {GLOBECOM 2009 - 2009 IEEE Global Telecommunications Conference},
   month = {11},
   pages = {1-6},
   publisher = {IEEE},
   title = {Multi-Commodity Flow Traffic Engineering with Hybrid MPLS/OSPF Routing},
   url = {http://ieeexplore.ieee.org/document/5426135/},
   year = {2009},
}
@article{DAI2017,
   author = {Weibin DAI and Jun ZHANG and Xiaoqian SUN},
   doi = {10.1016/j.cja.2017.05.012},
   issn = {10009361},
   issue = {4},
   journal = {Chinese Journal of Aeronautics},
   month = {8},
   pages = {1481-1492},
   title = {On solving multi-commodity flow problems: An experimental evaluation},
   volume = {30},
   url = {https://linkinghub.elsevier.com/retrieve/pii/S100093611730122X},
   year = {2017},
}
@article{Rapoport2009,
   author = {Amnon Rapoport and Tamar Kugler and Subhasish Dugar and Eyran J. Gisches},
   doi = {10.1016/j.geb.2008.02.007},
   issn = {08998256},
   issue = {2},
   journal = {Games and Economic Behavior},
   month = {3},
   pages = {538-571},
   title = {Choice of routes in congested traffic networks: Experimental tests of the Braess Paradox},
   volume = {65},
   url = {https://linkinghub.elsevier.com/retrieve/pii/S0899825608000535},
   year = {2009},
}
@article{Duhamel2007,
   abstract = {We propose a modified version of the Flow Deviation method of Fratta, Gerla and Kleinrock to solve multicommodity problems with minimal congestion and a bounded number of active paths. We discuss the approximation of the min-max objective function by a separable convex potential function and give a mixed-integer non linear model for the constrained routing problem. A heuristic control of the path generation is then embedded in the original algorithm based on the concepts of cleaning the quasi inactive paths and the reduction of the flow width for each commodity. Numerical experiments show the validity of the approach for realistic medium-size networks associated with routing problems in broadband communication networks with multiple protocols and label-switched paths (MPLS).},
   author = {Christophe Duhamel and Philippe Mahey and Philippe Mahey Multicommodity},
   doi = {10.1002/net.20143ï},
   issue = {1},
   keywords = {Multicommodity flow,flow deviation,routing},
   publisher = {Multicommodity Flows and Network Design},
   title = {Multicommodity flow problems with a bounded number of paths : a flow deviation approach},
   volume = {49},
   url = {https://hal.science/hal-01691703},
   year = {2007},
}
@report{,
   abstract = {In this paper, we describe a very simple (1 + ")-approximation algorithm for the multicommodity ow problem. The algorithm runs in time that is polynomial in N (the number of nodes in the network) and ?1 (the closeness of the approximation to optimal). The algorithm is remarkable in that it is much simpler than all known polynomial time ow algorithms (including algorithms for the special case of one-commodity yow). In particular, the algorithm does not rely on augmenting paths, shortest paths, min-cost paths, or similar techniques to push ow through a network. In fact, no explicit attempt is ever made to push ow towards a sink during the algorithm. Because the algorithm is so simple, it can be applied to a variety of problems for which centralized decision making and dow planning is not possible. For example, the algorithm can be easily implemented with local control in a distributed network and it can be made tolerant to link failures. In addition, the algorithm appears to perform well in practice. Initial experiments using the DIMACS generator of test problems indicate that the algorithm performs as well as or better than previously known algorithms, at least for certain test problems.},
   author = {Baruch Awerbuch and Tom Leighton},
   title = {A Simple Local-Control Approximation Algorithm for Multicommodity Flow},
}
@report{Ouorou2000,
   author = {A Ouorou and P Mahey and J.-Ph Vial},
   issue = {1},
   journal = {Source: Management Science},
   pages = {126-147},
   title = {A Survey of Algorithms for Convex Multicommodity Flow Problems},
   volume = {46},
   url = {https://about.jstor.org/terms},
   year = {2000},
}
@book{Bertsekas1998,
   abstract = {1. Introduction -- 2. Shortest path problems -- 3. The max-flow problem -- 4. The min-cost flow problem -- 5. Simplex methods for min-cost flow -- 6. Dual ascent methods for min-cost flow -- 7. Auction algorithms for min-cost flow -- 8. Nonlinear network optimization -- 9. Convex separable network problems -- 10. Network problems with integer constraints -- Appendix A. Mathematical review.},
   author = {Dimitri P. Bertsekas},
   isbn = {1886529027},
   pages = {593},
   publisher = {Athena Scientific},
   title = {Network optimization : continuous and discrete methods},
   year = {1998},
}
@report{Dai2015,
   abstract = {Multi-commodity flow problems can be found in many areas, such as transportation, communication, and logistics. Therefore, such problems have been studied by many researchers and a variety of methods are proposed for solving it. However, most researchers only discuss the properties of different models and algorithms without taking into account the contribution of actual implementations. In fact, the real performance of a method may be greatly different with varying implementations. In this paper, several popular optimization solvers for the implementations of column generation and Lagrangian relaxation, are discussed. In order to test the scalability and optimality of these implementations, three groups of networks with different structures are used as case studies. It is shown that column generation outperforms Lagrangian relaxation in most instances, but the latter is better suitable in networks with a large number of commodities.},
   author = {Weibin Dai and Jun Zhang and Xiaoqian Sun},
   journal = {Chinese Journal of Aeronautics},
   keywords = {Lagrangian relaxation,Multi-commodity flow problem,column generation,evaluation},
   pages = {xx-xx},
   title = {On solving Multi-Commodity Flow Problems: An experimental evaluation},
   volume = {28},
   url = {www.elsevier.com/locate/cja},
   year = {2015},
}
@report{Ozdaglar2003,
   abstract = {In this paper, we propose methods for solving broadly applicable integer multicommodity flow problems. We focus in particular on the problem of routing and wavelength assignment (RWA), which is critically important for increasing the efficiency of wavelength-routed all-optical networks. Our methodology can be applied as a special case to the problem of routing in a circuit-switched network. We discuss an integer-linear programming formulation, which can be addressed with highly efficient linear (not integer) programming methods, to obtain optimal or nearly optimal solutions.},
   author = {Asuman E Ozdaglar and Dimitri P Bertsekas},
   journal = {Proc. of Symposium on Global Optimization},
   title = {Optimal Solution of Integer Multicommodity Flow Problems With Application in Optical Networks 1},
   year = {2003},
}
@report{,
   abstract = {We present a column-generation model and branch-and-price-and-cut algorithm for origin-destination integer multicommodity flow problems. The origin-destination integer multicommodity flow problem is a constrained version of the linear multicommodity flow problem in which flow of a commodity (defined in this case by an origin-destination pair) may use only one path from origin to destination. Branch-and-price-and-cut is a variant of branch-and-bound, with bounds provided by solving linear programs using column-and-cut generation at nodes of the branch-and-bound tree. Because our model contains one variable for each origin-destination path, for every commodity, the linear programming relaxations at nodes of the branch-and-bound tree are solved using column generation, i.e., implicit pricing of nonbasic variables to generate new columns or to prove LP optimality. We devise a new branching rule that allows columns to be generated efficiently at each node of the branch-and-bound tree. Then, we describe cuts (cover inequalities) that can be generated at each node of the branch-and-bound tree. These cuts help to strengthen the linear programming relaxation and to mitigate the effects of problem symmetry. We detail the implementation of our combined column-and-cut generation method and present computational results for a set of test problems arising from telecommunications applications. We illustrate the value of our branching rule when used to find a heuristic solution and compare branch-and-price and branch-and-price-and-cut methods to find optimal solutions for highly capacitated problems.},
   author = {Cynthia Barnhart and Christopher A Hane and Pamela H Vance},
   title = {USING BRANCH-AND-PRICE-AND-CUT TO SOLVE ORIGIN-DESTINATION INTEGER MULTICOMMODITY FLOW PROBLEMS},
}
@article{,
   title = {Batagelj_fmf},
}
@film{,
   abstract = {https://www.youtube.com/watch?v=h0sO2ZhLRwI&ab_channel=BrunoF.Santos},
   title = {AE4423 Lect4.2 The Column Generation Algorithm},
   url = {AE4423 Lect4.2 The Cohttps://www.youtube.com/watch?v=h0sO2ZhLRwI&ab_channel=BrunoF.Santoslumn Generation Algorithm},
}
@report{,
   author = {Janez Povh and Janez Povh Linearno},
   title = {Izbrana poglavja iz optimizacije-celoštevilsko linearno programiranje},
}
@report{Hrga2023,
   author = {Timotej Hrga and Janez Povh},
   title = {Izbrana poglavja iz optimizacije-zapiski},
   year = {2023},
}
@report{,
   abstract = {Many transportation, communications, and logistics problems can be formulated as large multi-commodity flow problems , which are often solved using the traditional column generation method. During the application of the column generation, one needs to find initial solutions, so-called feasible columns in a first step. In order to determine these feasible columns and also solve dependent price problems within an acceptable time, this paper proposes several novel methods: Two methods by solving the global problem and two methods by finding the shortest and widest paths are proposed to compute the initial columns. Furthermore , we propose two methods by finding the shortest paths with commodities and sources (SPC and SPS) for solving price problems. Several well-known network instances are used as case studies in our evaluation to test the efficiency of each method. It is shown that the widest-path method is the best for finding initial columns. For solving the price problems, the preference of the two path-finding methods depend on the network structure.},
   author = {Weibin Dai and Sun Xiaoqian and Wandelt Sebastian},
   keywords = {column generation,initial columns,multi-commodity flow problem,price problems},
   title = {Finding Feasible Solutions for Multi-Commodity Flow Problems},
}
@report{,
   author = {Baruch Awerbuch},
   title = {Improved Approximation Algorithms the Multi-Commodity Flow Problem and Competitive Routing in Dynamic Networks},
}
@article{Charikar2018,
   abstract = {Modern networks run "middleboxes" that offer services ranging from network address translation and server load balancing to firewalls, encryption, and compression. In an industry trend known as Network Functions Virtualization (NFV), these middleboxes run as virtual machines on any commodity server, and the switches steer traffic through the relevant chain of services. Network administrators must decide how many middleboxes to run, where to place them, and how to direct traffic through them, based on the traffic load and the server and network capacity. Rather than placing specific kinds of middleboxes on each processing node, we argue that server virtualization allows each server node to host all middlebox functions, and simply vary the fraction of resources devoted to each one. This extra flexibility fundamentally changes the optimization problem the network administrators must solve to a new kind of multi-commodity flow problem, where the traffic flows consume bandwidth on the links as well as processing resources on the nodes. We show that allocating resources to maximize the processed flow can be optimized exactly via a linear programming formulation, and to arbitrary accuracy via an efficient combinatorial algorithm. Our experiments with real traffic and topologies show that a joint optimization of node and link resources leads to an efficient use of bandwidth and processing capacity. We also study a class of design problems that decide where to provide node capacity to best process and route a given set of demands, and demonstrate both approximation algorithms and hardness results for these problems.},
   author = {Moses Charikar and Yonatan Naamad and Jennifer Rexford and X. Kelvin Zou},
   month = {2},
   title = {Multi-Commodity Flow with In-Network Processing},
   url = {http://arxiv.org/abs/1802.09118},
   year = {2018},
}
@report{,
   title = {Mathematical optimization},
}
@book{,
   abstract = {In 1958, Ralph E. Gomory transformed the field of integer programming when he published a short paper that described his cutting-plane algorithm for pure integer programs and announced that the method could be refined to give a finite algorithm for integer programming. In January of 2008, to commemorate the anniversary of Gomory's seminal paper, a special session celebrating fifty years of integer programming was held in Aussois, France, as part of the 12th Combinatorial Optimization Workshop. This book is based on the material presented during this session. 50 Years of Integer Programming offers an account of featured talks at the 2008 Aussois workshop, namely - Michele Conforti, Gérard Cornuéjols, and Giacomo Zambelli: Polyhedral Approaches to Mixed Integer Linear Programming - William Cook: 50+ Years of Combinatorial Integer Programming - Francois Vanderbeck and Laurence A. Wolsey: Reformulation and Decomposition of Integer Programs The book contains reprints of key historical articles together with new troductions and historical perspectives by the authors: Egon Balas, Michel Balinski, Jack Edmonds, Ralph E. Gomory, Arthur M. Geoffrion, Alan J. Hoffman & Joseph B. Kruskal, Richard M. Karp, Harold W. Kuhn, and Ailsa H. Land & Alison G. Doig. It also contains written versions of survey lectures on six of the hottest topics in the field by distinguished members of the integer programming community: - Friedrich Eisenbrand: Integer Programming and Algorithmic Geometry of Numbers - Raymond Hemmecke, Matthias Köppe, Jon Lee, and Robert Weismantel: Nonlinear Integer Programming - Andrea Lodi: Mixed Integer Programming Computation - Francois Margot: Symmetry in Integer Linear Programming - Franz Rendl: Semidefinite Relaxations for Integer Programming - Jean-Philippe P. Richard and Santanu S. Dey: The Group-Theoretic Approach to Mixed Integer Programming Integer programming holds great promise for the future, and continues to build on its foundations. Indeed, Gomory's finite cutting-plane method for the pure integer case is currently being reexamined and is showing new promise as a practical computational method. This book is a uniquely useful celebration of the past, present and future of this important and active field. Ideal for students and researchers in mathematics, computer science and operations research, it exposes mathematical optimization, in particular integer programming and combinatorial optimization, to a broad audience. © Springer-Verlag Berlin Heidelberg 2010. All rights are reserved.},
   author = {Michael Jünger and Denis Naddef and William R. Pulleyblank and Giovanni Rinaldi and Thomas M. Liebling and George L. Nemhauser and Gerhard Reinelt and Laurence A. Wolsey},
   doi = {10.1007/978-3-540-68279-0},
   isbn = {9783540682745},
   journal = {50 Years of Integer Programming 1958-2008: From the Early Years to the State-of-the-Art},
   pages = {1-804},
   publisher = {Springer Berlin Heidelberg},
   title = {50 years of integer programming 1958-2008: From the early years to the state-of-the-art},
   year = {2010},
}
@report{,
   title = {Integer Programming: The Branch and Bound Method},
}
@report{,
   author = {Mitja Rozman},
   keywords = {matematično modeliranje,mešano celoštevilsko linearno programiranje,problem razporejanja},
   title = {Razporejanje prilagodljivih ponudb energije z mešanim celoštevilskim linearnim programiranjem},
}
@report{,
   abstract = {Izrek 1 Za vsak problem razvoza Π velja natanko ena od treh možnosti: (a) Π je nedopusten, (b) Π je neomejen, (c) Π ima optimalno rešitev. Dokaz: Naj bo Π problem razvoza na omrežju z m vozlišči. Dokazujemo z indukcijo po m. Osnova: m = 1 V tem primeru je b 1 = 0 in Π ima optimalno rešitev (prazen razvoz), torej nastopi možnost (c). Korak: m ≥ 2 Na Π uporabimo dvofazno simpleksno metodo na omrežjih s Cunninghamovim pravilom. I. faza: Bodisi odkrijemo, da je Π nedopusten (a), bodisi dobimo ddr in nada-ljujemo z II. fazo (gl. spodaj), bodisi Π razpade na dva manjša neodvisna PR Π 1 in Π 2. Po indukcijski predpostavki izrek velja za vse manjše PR, torej velja za Π 1 in Π 2. Če je vsaj eden od njiju nedopusten, je nedopusten tudi Π (a). Če sta oba dopustna in je vsaj eden od njiju neomejen, je neomejen tudi Π (b). Če imata oba optimalno rešitev, jo ima tudi Π (c). II. faza: Bodisi odkrijemo, da je Π neomejen (b), bodisi dobimo optimalno rešitev (c). V vsakem primeru se torej postopek konča z enim od izidov (a), (b) ali (c). 2 Dual problema razvoza Pri problemu razvoza Π iščemo min c, x pri pogojih Ax = b, x ≥ 0. Tu je A incidenčna matrika usmerjenega grafa G, za vektor b pa velja m i=1 b i = 0. Po receptu za zapis duala linearnega programa v splošni obliki dobimo dualni problem Π , kjer iščemo max b, y pri pogojih A T y ≤ c, y ∈ R m .},
   title = {Osnovni izrek problema razvoza},
   url = {https://ucilnica1920.fmf.uni-lj.si/pluginfile.php/70251/mod_resource/content/1/ProblemRazvoza3.pdf},
}
@report{,
   abstract = {Notes edited by instructor in 2011. We introduce the use linear programming (LP) in the design and analysis of approximation algorithms.The topics include Vertex Cover, Set Cover, randomized rounding, dual-fitting. It is assumed that the students have some background knowledge in basics of linear programming.},
   title = {CS 598CSC: Approximation Algorithms},
   url = {https://courses.engr.illinois.edu/cs598csc/sp2011/Lectures/lecture_4.pdf},
}
